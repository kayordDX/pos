// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-nocheck
/**
 * Generated by orval v7.6.0 🍺
 * Do not edit manually.
 * Kayord.Pos
 * OpenAPI spec version: v1
 */
import { createMutation } from "@tanstack/svelte-query";
import type {
	CreateMutationOptions,
	CreateMutationResult,
	MutationFunction,
} from "@tanstack/svelte-query";

import type { InternalErrorResponse } from "./api.schemas";

import { customInstance } from "../mutator/customInstance.svelte";
import type { ErrorType } from "../mutator/customInstance.svelte";

export const extraGroupDelete = (id: number) => {
	return customInstance<unknown>({ url: `/extraGroup${id}`, method: "DELETE" });
};

export const getExtraGroupDeleteMutationOptions = <
	TError = ErrorType<void | InternalErrorResponse>,
	TContext = unknown,
>(options?: {
	mutation?: CreateMutationOptions<
		Awaited<ReturnType<typeof extraGroupDelete>>,
		TError,
		{ id: number },
		TContext
	>;
}): CreateMutationOptions<
	Awaited<ReturnType<typeof extraGroupDelete>>,
	TError,
	{ id: number },
	TContext
> => {
	const mutationKey = ["extraGroupDelete"];
	const { mutation: mutationOptions } = options
		? options.mutation && "mutationKey" in options.mutation && options.mutation.mutationKey
			? options
			: { ...options, mutation: { ...options.mutation, mutationKey } }
		: { mutation: { mutationKey } };

	const mutationFn: MutationFunction<
		Awaited<ReturnType<typeof extraGroupDelete>>,
		{ id: number }
	> = (props) => {
		const { id } = props ?? {};

		return extraGroupDelete(id);
	};

	return { mutationFn, ...mutationOptions };
};

export type ExtraGroupDeleteMutationResult = NonNullable<
	Awaited<ReturnType<typeof extraGroupDelete>>
>;

export type ExtraGroupDeleteMutationError = ErrorType<void | InternalErrorResponse>;

export const createExtraGroupDelete = <
	TError = ErrorType<void | InternalErrorResponse>,
	TContext = unknown,
>(options?: {
	mutation?: CreateMutationOptions<
		Awaited<ReturnType<typeof extraGroupDelete>>,
		TError,
		{ id: number },
		TContext
	>;
}): CreateMutationResult<
	Awaited<ReturnType<typeof extraGroupDelete>>,
	TError,
	{ id: number },
	TContext
> => {
	const mutationOptions = getExtraGroupDeleteMutationOptions(options);

	return createMutation(mutationOptions);
};
