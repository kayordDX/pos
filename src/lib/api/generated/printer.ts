// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-nocheck
/**
 * Generated by orval v7.1.1 🍺
 * Do not edit manually.
 * Kayord.Pos
 * OpenAPI spec version: v1
 */
import { createQuery } from "@tanstack/svelte-query";
import type {
	CreateQueryOptions,
	CreateQueryResult,
	QueryFunction,
	QueryKey,
} from "@tanstack/svelte-query";
import type { InternalErrorResponse, PrinterPrinterStatus } from "./api.schemas";
import { customInstance } from "../mutator/customInstance.svelte";
import type { ErrorType } from "../mutator/customInstance.svelte";

export const printerList = (outletId: number) => {
	return customInstance<PrinterPrinterStatus[]>({
		url: `/printer/list/${outletId}`,
		method: "GET",
	});
};

export const getPrinterListQueryKey = (outletId: number) => {
	return [`/printer/list/${outletId}`] as const;
};

export const getPrinterListQueryOptions = <
	TData = Awaited<ReturnType<typeof printerList>>,
	TError = ErrorType<InternalErrorResponse>,
>(
	outletId: number,
	options?: {
		query?: Partial<CreateQueryOptions<Awaited<ReturnType<typeof printerList>>, TError, TData>>;
	}
) => {
	const { query: queryOptions } = options ?? {};

	const queryKey = queryOptions?.queryKey ?? getPrinterListQueryKey(outletId);

	const queryFn: QueryFunction<Awaited<ReturnType<typeof printerList>>> = () =>
		printerList(outletId);

	return { queryKey, queryFn, enabled: !!outletId, ...queryOptions } as CreateQueryOptions<
		Awaited<ReturnType<typeof printerList>>,
		TError,
		TData
	> & { queryKey: QueryKey };
};

export type PrinterListQueryResult = NonNullable<Awaited<ReturnType<typeof printerList>>>;
export type PrinterListQueryError = ErrorType<InternalErrorResponse>;

export function createPrinterList<
	TData = Awaited<ReturnType<typeof printerList>>,
	TError = ErrorType<InternalErrorResponse>,
>(
	outletId: number,
	options?: {
		query?: Partial<CreateQueryOptions<Awaited<ReturnType<typeof printerList>>, TError, TData>>;
	}
): CreateQueryResult<TData, TError> & { queryKey: QueryKey } {
	const queryOptions = getPrinterListQueryOptions(outletId, options);

	const query = createQuery(queryOptions) as CreateQueryResult<TData, TError> & {
		queryKey: QueryKey;
	};

	query.queryKey = queryOptions.queryKey;

	return query;
}
