/**
 * Generated by orval v7.14.0 üç∫
 * Do not edit manually.
 * Kayord.Pos
 * OpenAPI spec version: v1
 */
import { createMutation } from "@tanstack/svelte-query";
import type {
	CreateMutationOptions,
	CreateMutationResult,
	MutationFunction,
	QueryClient,
} from "@tanstack/svelte-query";

import type {
	AdjutmentTypeOutletCreateRequest,
	EntitiesMenu,
	InternalErrorResponse,
} from "./api.schemas";

import { customInstance } from "../mutator/customInstance.svelte";
import type { ErrorType, BodyType } from "../mutator/customInstance.svelte";

export const adjutmentTypeOutletCreate = (
	adjutmentTypeOutletCreateRequest: BodyType<AdjutmentTypeOutletCreateRequest>
) => {
	return customInstance<EntitiesMenu>({
		url: `/adjustmentType`,
		method: "POST",
		headers: { "Content-Type": "application/json" },
		data: adjutmentTypeOutletCreateRequest,
	});
};

export const getAdjutmentTypeOutletCreateMutationOptions = <
	TError = ErrorType<void | InternalErrorResponse>,
	TContext = unknown,
>(options?: {
	mutation?: CreateMutationOptions<
		Awaited<ReturnType<typeof adjutmentTypeOutletCreate>>,
		TError,
		{ data: BodyType<AdjutmentTypeOutletCreateRequest> },
		TContext
	>;
}): CreateMutationOptions<
	Awaited<ReturnType<typeof adjutmentTypeOutletCreate>>,
	TError,
	{ data: BodyType<AdjutmentTypeOutletCreateRequest> },
	TContext
> => {
	const mutationKey = ["adjutmentTypeOutletCreate"];
	const { mutation: mutationOptions } = options
		? options.mutation && "mutationKey" in options.mutation && options.mutation.mutationKey
			? options
			: { ...options, mutation: { ...options.mutation, mutationKey } }
		: { mutation: { mutationKey } };

	const mutationFn: MutationFunction<
		Awaited<ReturnType<typeof adjutmentTypeOutletCreate>>,
		{ data: BodyType<AdjutmentTypeOutletCreateRequest> }
	> = (props) => {
		const { data } = props ?? {};

		return adjutmentTypeOutletCreate(data);
	};

	return { mutationFn, ...mutationOptions };
};

export type AdjutmentTypeOutletCreateMutationResult = NonNullable<
	Awaited<ReturnType<typeof adjutmentTypeOutletCreate>>
>;
export type AdjutmentTypeOutletCreateMutationBody = BodyType<AdjutmentTypeOutletCreateRequest>;
export type AdjutmentTypeOutletCreateMutationError = ErrorType<void | InternalErrorResponse>;

export const createAdjutmentTypeOutletCreate = <
	TError = ErrorType<void | InternalErrorResponse>,
	TContext = unknown,
>(
	options?: {
		mutation?: CreateMutationOptions<
			Awaited<ReturnType<typeof adjutmentTypeOutletCreate>>,
			TError,
			{ data: BodyType<AdjutmentTypeOutletCreateRequest> },
			TContext
		>;
	},
	queryClient?: QueryClient
): CreateMutationResult<
	Awaited<ReturnType<typeof adjutmentTypeOutletCreate>>,
	TError,
	{ data: BodyType<AdjutmentTypeOutletCreateRequest> },
	TContext
> => {
	const mutationOptions = getAdjutmentTypeOutletCreateMutationOptions(options);

	return createMutation(() => ({ ...mutationOptions, queryClient }));
};
